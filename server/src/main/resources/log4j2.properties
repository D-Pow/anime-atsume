# Use Log4j2 instead of Spring's default Logback logger because it stopped working
# in Spring Boot 3/Java 17 for some weird, incredibly unclear and obscure reason.
# Spring's default Logback logger:
#   - Pattern docs: http://logback.qos.ch/manual/layouts.html
#   - Path: org.springframework.boot.logging.logback.defaults.xml
# Differences in pattern format:
#   - `%clr` is replaced with `%style`
#   - `%highlight{}` is used to change color based on log level
#   - Default var values reflect Bash's syntax (`${VAR:-default}`) vs a custom deviation from it (`${VAR:}`)
#   - Colors are capitalized instead of lowercase
#
# Using Log4j2 with .properties instead of .xml: https://springframework.guru/log4j-2-configuration-using-properties-file
#
# Log4j2 requires a pseudo-classpath to reuse properties
# e.g. `${bundle:fileBaseNameWithoutExtension:prop.value}`
# See:
#   - https://stackoverflow.com/questions/46595948/using-a-property-from-one-property-file-into-log4j2-properties-file/46605415#46605415
#
# Read system vars with `${sys:MY_VAR}`
# Read env vars with `${env:MY_VAR}`
# See:
#   - https://logging.apache.org/log4j/2.x/manual/lookups.html
# For some reason, var substitution only works for `sys` and not `env`.

# Configure root logger
#rootLogger.level=info
rootLogger.disableAnsi=false
rootLogger.appenderRef.stdout.ref=consoleLogger
rootLogger.appenderRef.rolling.ref=fileLogger

# Configure logger printing to the console
appender.console.type=Console
appender.console.name=consoleLogger
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=%style{%d{${env:LOG_DATEFORMAT_PATTERN:-yyyy/MM/dd | HH:mm:ss.SSS}}}{Magenta} | %highlight{${env:LOG_LEVEL_PATTERN:-%4p}} | %style{[${sys:PID} - %thread]}{Dim White} --- %style{%40.40logger{40}  L:%L}{Cyan} : %m%n${env:LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
