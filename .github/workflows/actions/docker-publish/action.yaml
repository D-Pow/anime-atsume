name: Docker - Build and publish
description: Builds and publishes the Docker image to GitHub


# `secrets` is only available in workflows, not actions, even if actions are called
# from a workflow where it's defined
inputs:
  GITHUB_TOKEN:
    description: GitHub token required for modifying branches or artifact publishing.
    required: true
  registryUrlDomain:
    description: Docker registry URL's domain.
    required: false
    default: ghcr.io
  imageRetentionDays:
    description: How many days to keep the Docker image artifact in GitHub artifacts.
    required: false
    default: 30


outputs:
  dockerImageNameAndTag:
    description: Docker image name and tag version joined by a colon.
    value: ${{ steps.docker-metadata-extract.outputs.dockerImageNameAndTag }}
  registryUrl:
    description: Docker image registry full URL.
    value: ${{ env.registryUrl }}


# See:
#   - https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
runs:
  using: composite
  steps:
    - name: Checkout repository branch
      uses: actions/checkout@v3

    - name: Docker - Cache name init
      uses: ./.github/workflows/actions/cache-name

    # Resulting URL: ghcr.io/D-Pow/anime-atsume
    - name: Docker - Setup env
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV
        echo "imageName=${{ env.REPO_NAME }}" >> $GITHUB_ENV
        echo "registryUrlDomain=${{ inputs.registryUrlDomain }}" >> $GITHUB_ENV
        echo "registryUrl=${{ env.registryUrlDomain }}/${{ github.repository }}" >> $GITHUB_ENV
        echo "imageRetentionDays=${{ inputs.imageRetentionDays }}" >> $GITHUB_ENV

    - name: Docker - Output vars
      shell: bash
      run: |
        echo "registryUrl=${{ env.registryUrl }}" >> $GITHUB_OUTPUT

    # - name: Docker - Build
    #   shell: bash
    #   run: |
    #     docker build -t "${{ env.imageName }}" .
    #
    # Setting GITHUB_ENV works between steps but not within multiple commands within one step
    # - name: Docker - Set image and tag name in env
    #   id: docker-set-env-image-tag-name
    #   shell: bash
    #   run: |
    #     echo "dockerImageNameAndTag=$(docker inspect ${{ env.imageName }} | jq -r '.[0].RepoTags[0]')" >> $GITHUB_ENV
    #
    # - name: Docker - Set tags and labels
    #   id: docker-metadata-extract
    #   shell: bash
    #   run: |
    #     echo "tag=$(echo ${{ env.dockerImageNameAndTag }} | sed -E 's/^[^:]+:(.*)/\1/')" >> $GITHUB_ENV
    #     echo "tags=${{ env.dockerImageNameAndTag }}" >> $GITHUB_ENV
    #     echo "labels=${{ env.imageName }}" >> $GITHUB_ENV
    #
    # - name: Docker - Upload image as GitHub artifact
    #   id: docker-upload-image-as-github-artifact
    #   uses: ishworkh/docker-image-artifact-upload@v1
    #   with:
    #     image: "${{ env.dockerImageNameAndTag }}"
    #     retention_days: ${{ env.imageRetentionDays }}

    - name: Docker - Login to container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.registryUrlDomain }}
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Docker - Extract metadata (tags, labels)
      id: docker-metadata-extract
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.registryUrl }}

    - name: Docker - Build and push image
      id: docker-build-and-push-image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true  # Toggle whether or not to push to GitHub's Docker image registry (different than packages)
        tags: ${{ env.imageName }}:latest
        labels: ${{ env.imageName }}
