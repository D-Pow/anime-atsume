name: Docker - Build and publish
description: Builds and publishes the Docker image to GitHub


# `secrets` is only available in workflows, not actions, even if actions are called
# from a workflow where it's defined
inputs:
  GITHUB_TOKEN:
    description: GitHub token required for modifying branches or artifact publishing.
    required: true
  imageName:
    description: Docker image name to use upon build.
    required: false
    default: anime-atsume
  registryUrlDomain:
    description: Docker registry URL's domain.
    required: false
    default: ghcr.io
  imageRetentionDays:
    description: How many days to keep the Docker image artifact in GitHub artifacts.
    required: false
    default: 30


outputs:
  dockerImageNameAndTag:
    description: Docker image name and tag version joined by a colon.
    value: ${{ steps.docker-metadata-extract.outputs.dockerImageNameAndTag }}


# See:
#   - https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
runs:
  using: composite
  steps:
    - name: Checkout repository branch
      uses: actions/checkout@v3

    - name: Docker - Cache name init
      uses: ./.github/workflows/actions/cache-name

    # Resulting URL: ghcr.io/D-Pow/anime-atsume
    - name: Docker - Setup env
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.GITHUB_TOKEN }}" >> $GITHUB_ENV
        echo "imageName=${{ inputs.imageName }}" >> $GITHUB_ENV
        echo "registryUrlDomain=${{ inputs.registryUrlDomain }}" >> $GITHUB_ENV
        echo "registryUrl=${{ env.registryUrlDomain }}/${{ github.repository }}" >> $GITHUB_ENV

    - name: Docker - Build
      shell: bash
      run: |
        docker build -t "${{ env.imageName }}" .

    - name: Docker:Get image and tag name
      id: docker-metadata-extract
      shell: bash
      run: |
        echo "dockerImageNameAndTag=$(docker inspect ${{ env.imageName }} | jq -r '.[0].RepoTags[0]')" >> $GITHUB_ENV
        echo "tag=$(echo ${{ env.dockerImageNameAndTag }} | sed -E 's/^[^:]+:(.*)/\1/')" >> $GITHUB_OUTPUT
        echo "tags=${{ env.dockerImageNameAndTag }}" >> $GITHUB_OUTPUT
        echo "labels=${{ env.imageName }}" >> $GITHUB_OUTPUT

    # - name: Docker - Login to container registry
    #   uses: docker/login-action@v2
    #   with:
    #     registry: ${{ env.registryUrlDomain }}
    #     username: ${{ github.actor }}
    #     password: ${{ inputs.GITHUB_TOKEN }}
    #
    # - name: Docker - Extract metadata (tags, labels)
    #   id: docker-metadata-extract
    #   uses: docker/metadata-action@v4
    #   with:
    #     images: ${{ env.registryUrlDomain }}/${{ env.imageName }}

    - name: Docker - Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false  # set to `true` to use this nested action's push feature
        tags: ${{ steps.docker-metadata-extract.outputs.tags }}
        labels: ${{ steps.docker-metadata-extract.outputs.labels }}

    - name: Docker - Upload image as GitHub artifact
      uses: ishworkh/docker-image-artifact-upload@v1
      with:
        image: "${{ steps.docker-metadata-extract.outputs.dockerImageNameAndTag }}"
        retention_days: ${{ inputs.imageRetentionDays }}
