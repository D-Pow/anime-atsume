name: Cache - Initialize names
description: Initializes the cache names for client and server


outputs:
  CLIENT_CACHE_ID:
    description: Client cache ID to use for all workflows/actions.
    value: ${{ steps.client-init-set-cache-id.outputs.CLIENT_CACHE_ID }}
  SERVER_CACHE_ID:
    description: Server cache ID to use for all workflows/actions.
    value: ${{ steps.server-init-set-cache-id.outputs.SERVER_CACHE_ID }}
  REPO_NAME:
    description: Name of the repository without owner/org or .git injected.
    value: ${{ steps.set-repo-name.outputs.REPO_NAME }}


runs:
  using: composite
  steps:
    - name: Checkout repository branch
      uses: actions/checkout@v3

    - uses: actions/setup-java@v3
      with:
        # See:
        #   - Supported Java distribution: https://github.com/actions/setup-java#supported-distributions
        distribution: 'temurin'  # Eclipse version of JDK
        java-version: '17'

    - name: Set repo name
      id: set-repo-name
      shell: bash
      run: |
        echo "REPO_NAME=$(basename -s .git $(git config remote.origin.url))" >> $GITHUB_ENV
        echo "REPO_NAME=$(basename -s .git $(git config remote.origin.url))" >> $GITHUB_OUTPUT

    # Can't use `working-directory` here because paths in `hashFiles()` are always relative to root.
    # See:
    #   - https://docs.github.com/en/actions/learn-github-actions/expressions#hashfiles
    - name: Client - Set cache ID
      id: client-init-set-cache-id
      shell: bash
      run: |
        echo "CLIENT_CACHE_ID=client-cache-${{ runner.os }}-${{ hashFiles('./client/package.json', './client/src/**', './client/tests/**', './client/mocks/**', './client/config/**', './client/scripts/**') }}" >> $GITHUB_ENV
        echo "CLIENT_CACHE_ID=${{ env.CLIENT_CACHE_ID }}" >> $GITHUB_OUTPUT

    - name: Server - Set cache ID
      id: server-init-set-cache-id
      shell: bash
      run: |
        echo "SERVER_CACHE_ID=server-cache-${{ runner.os }}-${{ hashFiles('./server/build.gradle', './server/settings.gradle', './server/src/**', './server/utils/**') }}" >> $GITHUB_ENV
        echo "SERVER_CACHE_ID=${{ env.SERVER_CACHE_ID }}" >> $GITHUB_OUTPUT
